import React, { useState, useEffect } from 'react';
import {
  Box,
  Grid,
  Paper,
  Typography,
  Card,
  CardContent,
  Avatar,
  LinearProgress,
  Chip,
  Button,
  IconButton,
  List,
  ListItem,
  ListItemAvatar,
  ListItemText,
  ListItemSecondaryAction,
  Divider,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  Alert
} from '@mui/material';
import {
  School as SchoolIcon,
  People as PeopleIcon,
  Assignment as AssignmentIcon,
  Folder as FolderIcon,
  TrendingUp as TrendingUpIcon,
  Notifications as NotificationsIcon,
  Schedule as ScheduleIcon,
  Analytics as AnalyticsIcon,
  Add as AddIcon,
  Edit as EditIcon,
  Visibility as VisibilityIcon,
  CheckCircle as CheckCircleIcon,
  Warning as WarningIcon,
  AccessTime as AccessTimeIcon
} from '@mui/icons-material';
import { useAuth } from '../../../contexts/AuthContext';

const LecturerDashboard = () => {
  const { user } = useAuth();
  const [loading, setLoading] = useState(true);
  const [dashboardData, setDashboardData] = useState({});

  // Mock data - thay th·∫ø b·∫±ng API call th·ª±c t·∫ø
  useEffect(() => {
    const fetchDashboardData = async () => {
      // Simulate API call
      setTimeout(() => {
        setDashboardData({
          stats: {
            totalCourses: 5,
            totalStudents: 127,
            pendingAssignments: 8,
            documentsShared: 34
          },
          recentActivities: [
            {
              id: 1,
              type: 'assignment',
              title: 'B√†i t·∫≠p To√°n cao c·∫•p - Ch∆∞∆°ng 3',
              description: '15 sinh vi√™n ƒë√£ n·ªôp b√†i',
              time: '10 ph√∫t tr∆∞·ªõc',
              status: 'pending'
            },
            {
              id: 2,
              type: 'document',
              title: 'T√†i li·ªáu b√†i gi·∫£ng m·ªõi',
              description: 'ƒê√£ t·∫£i l√™n cho l·ªõp CNTT-K65',
              time: '30 ph√∫t tr∆∞·ªõc',
              status: 'completed'
            },
            {
              id: 3,
              type: 'notification',
              title: 'Th√¥ng b√°o l·ªãch thi',
              description: 'ƒê√£ g·ª≠i th√¥ng b√°o ƒë·∫øn 45 sinh vi√™n',
              time: '1 gi·ªù tr∆∞·ªõc',
              status: 'completed'
            }
          ],
          upcomingSchedule: [
            {
              id: 1,
              course: 'To√°n cao c·∫•p A1',
              time: '08:00 - 09:30',
              room: 'P301',
              date: 'H√¥m nay'
            },
            {
              id: 2,
              course: 'L·∫≠p tr√¨nh C++',
              time: '14:00 - 15:30',
              room: 'Lab A2',
              date: 'H√¥m nay'
            },
            {
              id: 3,
              course: 'C∆° s·ªü d·ªØ li·ªáu',
              time: '10:00 - 11:30',
              room: 'P205',
              date: 'Ng√†y mai'
            }
          ],
          courseProgress: [
            {
              id: 1,
              name: 'To√°n cao c·∫•p A1',
              students: 45,
              completed: 75,
              assignments: 3,
              pendingAssignments: 1
            },
            {
              id: 2,
              name: 'L·∫≠p tr√¨nh C++',
              students: 38,
              completed: 60,
              assignments: 4,
              pendingAssignments: 2
            },
            {
              id: 3,
              name: 'C∆° s·ªü d·ªØ li·ªáu',
              students: 44,
              completed: 85,
              assignments: 2,
              pendingAssignments: 0
            }
          ]
        });
        setLoading(false);
      }, 1000);
    };

    fetchDashboardData();
  }, []);

  // Stats Cards Component
  const StatsCard = ({ icon, title, value, color, trend }) => (
    <Card sx={{ height: '100%' }}>
      <CardContent>
        <Box sx={{ display: 'flex', alignItems: 'center' }}>
          <Avatar sx={{ bgcolor: color, mr: 2 }}>
            {icon}
          </Avatar>
          <Box sx={{ flexGrow: 1 }}>
            <Typography color="textSecondary" gutterBottom variant="overline">
              {title}
            </Typography>
            <Typography variant="h4" sx={{ fontWeight: 600 }}>
              {value}
            </Typography>
            {trend && (
              <Box sx={{ display: 'flex', alignItems: 'center', mt: 1 }}>
                <TrendingUpIcon sx={{ color: 'success.main', fontSize: 16 }} />
                <Typography variant="body2" sx={{ color: 'success.main', ml: 0.5 }}>
                  {trend}
                </Typography>
              </Box>
            )}
          </Box>
        </Box>
      </CardContent>
    </Card>
  );

  if (loading) {
    return (
      <Box>
        <Typography variant="h4" sx={{ mb: 3 }}>
          ƒêang t·∫£i d·ªØ li·ªáu...
        </Typography>
        <LinearProgress />
      </Box>
    );
  }

  return (
    // <Box>
    //   {/* Header */}
    //   <Box sx={{ mb: 4 }}>
    //     <Typography variant="h4" sx={{ fontWeight: 600, mb: 1 }}>
    //       Ch√†o m·ª´ng tr·ªü l·∫°i, {user?.name || 'Gi·∫£ng vi√™n'}! üëã
    //     </Typography>
    //     <Typography variant="body1" color="text.secondary">
    //       ƒê√¢y l√† t·ªïng quan ho·∫°t ƒë·ªông gi·∫£ng d·∫°y c·ªßa b·∫°n h√¥m nay
    //     </Typography>
    //   </Box>

    //   {/* Stats Overview */}
    //   <Grid container spacing={3} sx={{ mb: 4 }}>
    //     <Grid item xs={12} sm={6} md={3}>
    //       <StatsCard
    //         icon={<SchoolIcon />}
    //         title="T·ªïng s·ªë l·ªõp"
    //         value={dashboardData.stats?.totalCourses || 0}
    //         color="#1976d2"
    //         trend="+2 l·ªõp m·ªõi"
    //       />
    //     </Grid>
    //     <Grid item xs={12} sm={6} md={3}>
    //       <StatsCard
    //         icon={<PeopleIcon />}
    //         title="T·ªïng s·ªë sinh vi√™n"
    //         value={dashboardData.stats?.totalStudents || 0}
    //         color="#388e3c"
    //         trend="+5 sinh vi√™n"
    //       />
    //     </Grid>
    //     <Grid item xs={12} sm={6} md={3}>
    //       <StatsCard
    //         icon={<AssignmentIcon />}
    //         title="B√†i t·∫≠p ch∆∞a ch·∫•m"
    //         value={dashboardData.stats?.pendingAssignments || 0}
    //         color="#f57c00"
    //       />
    //     </Grid>
    //     <Grid item xs={12} sm={6} md={3}>
    //       <StatsCard
    //         icon={<FolderIcon />}
    //         title="T√†i li·ªáu ƒë√£ chia s·∫ª"
    //         value={dashboardData.stats?.documentsShared || 0}
    //         color="#7b1fa2"
    //         trend="+3 t√†i li·ªáu"
    //       />
    //     </Grid>
    //   </Grid>

    //   <Grid container spacing={3}>
    //     {/* Recent Activities */}
    //     <Grid item xs={12} md={6}>
    //       <Paper sx={{ p: 3, height: 400 }}>
    //         <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 2 }}>
    //           <Typography variant="h6" sx={{ fontWeight: 600 }}>
    //             üìã Ho·∫°t ƒë·ªông g·∫ßn ƒë√¢y
    //           </Typography>
    //           <Button size="small" startIcon={<VisibilityIcon />}>
    //             Xem t·∫•t c·∫£
    //           </Button>
    //         </Box>
            
    //         <List>
    //           {dashboardData.recentActivities?.map((activity, index) => (
    //             <React.Fragment key={activity.id}>
    //               <ListItem alignItems="flex-start">
    //                 <ListItemAvatar>
    //                   <Avatar sx={{ 
    //                     bgcolor: activity.status === 'completed' ? '#4caf50' : '#ff9800' 
    //                   }}>
    //                     {activity.status === 'completed' ? <CheckCircleIcon /> : <AccessTimeIcon />}
    //                   </Avatar>
    //                 </ListItemAvatar>
    //                 <ListItemText
    //                   primary={activity.title}
    //                   secondary={
    //                     <React.Fragment>
    //                       <Typography variant="body2" color="text.primary">
    //                         {activity.description}
    //                       </Typography>
    //                       <Typography variant="caption" color="text.secondary">
    //                         {activity.time}
    //                       </Typography>
    //                     </React.Fragment>
    //                   }
    //                 />
    //               </ListItem>
    //               {index < dashboardData.recentActivities.length - 1 && <Divider />}
    //             </React.Fragment>
    //           ))}
    //         </List>
    //       </Paper>
    //     </Grid>

    //     {/* Upcoming Schedule */}
    //     <Grid item xs={12} md={6}>
    //       <Paper sx={{ p: 3, height: 400 }}>
    //         <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 2 }}>
    //           <Typography variant="h6" sx={{ fontWeight: 600 }}>
    //             üìÖ L·ªãch gi·∫£ng d·∫°y
    //           </Typography>
    //           <Button size="small" startIcon={<AddIcon />}>
    //             Th√™m l·ªãch
    //           </Button>
    //         </Box>
            
    //         <List>
    //           {dashboardData.upcomingSchedule?.map((schedule, index) => (
    //             <React.Fragment key={schedule.id}>
    //               <ListItem>
    //                 <ListItemAvatar>
    //                   <Avatar sx={{ bgcolor: '#1976d2' }}>
    //                     <ScheduleIcon />
    //                   </Avatar>
    //                 </ListItemAvatar>
    //                 <ListItemText
    //                   primary={schedule.course}
    //                   secondary={
    //                     <Box>
    //                       <Typography variant="body2">
    //                         üïê {schedule.time} - üìç {schedule.room}
    //                       </Typography>
    //                       <Chip 
    //                         label={schedule.date} 
    //                         size="small" 
    //                         color={schedule.date === 'H√¥m nay' ? 'primary' : 'default'}
    //                         sx={{ mt: 0.5 }}
    //                       />
    //                     </Box>
    //                   }
    //                 />
    //                 <ListItemSecondaryAction>
    //                   <IconButton edge="end">
    //                     <EditIcon />
    //                   </IconButton>
    //                 </ListItemSecondaryAction>
    //               </ListItem>
    //               {index < dashboardData.upcomingSchedule.length - 1 && <Divider />}
    //             </React.Fragment>
    //           ))}
    //         </List>
    //       </Paper>
    //     </Grid>

    //     {/* Course Progress */}
    //     <Grid item xs={12}>
    //       <Paper sx={{ p: 3 }}>
    //         <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 3 }}>
    //           <Typography variant="h6" sx={{ fontWeight: 600 }}>
    //             üìä Ti·∫øn ƒë·ªô c√°c l·ªõp h·ªçc
    //           </Typography>
    //           <Button startIcon={<AnalyticsIcon />} variant="outlined">
    //             Xem b√°o c√°o chi ti·∫øt
    //           </Button>
    //         </Box>
            
    //         <TableContainer>
    //           <Table>
    //             <TableHead>
    //               <TableRow>
    //                 <TableCell>T√™n l·ªõp</TableCell>
    //                 <TableCell align="center">S·ªë sinh vi√™n</TableCell>
    //                 <TableCell align="center">Ti·∫øn ƒë·ªô</TableCell>
    //                 <TableCell align="center">B√†i t·∫≠p</TableCell>
    //                 <TableCell align="center">C·∫ßn x·ª≠ l√Ω</TableCell>
    //                 <TableCell align="center">Thao t√°c</TableCell>
    //               </TableRow>
    //             </TableHead>
    //             <TableBody>
    //               {dashboardData.courseProgress?.map((course) => (
    //                 <TableRow key={course.id}>
    //                   <TableCell>
    //                     <Typography variant="subtitle2" sx={{ fontWeight: 600 }}>
    //                       {course.name}
    //                     </Typography>
    //                   </TableCell>
    //                   <TableCell align="center">
    //                     <Chip 
    //                       icon={<PeopleIcon />}
    //                       label={course.students}
    //                       size="small"
    //                       color="primary"
    //                       variant="outlined"
    //                     />
    //                   </TableCell>
    //                   <TableCell align="center">
    //                     <Box sx={{ minWidth: 100 }}>
    //                       <LinearProgress 
    //                         variant="determinate" 
    //                         value={course.completed} 
    //                         sx={{ mb: 1 }}
    //                       />
    //                       <Typography variant="caption">
    //                         {course.completed}%
    //                       </Typography>
    //                     </Box>
    //                   </TableCell>
    //                   <TableCell align="center">
    //                     <Typography variant="body2">
    //                       {course.assignments} b√†i t·∫≠p
    //                     </Typography>
    //                   </TableCell>
    //                   <TableCell align="center">
    //                     {course.pendingAssignments > 0 ? (
    //                       <Chip 
    //                         icon={<WarningIcon />}
    //                         label={`${course.pendingAssignments} b√†i ch∆∞a ch·∫•m`}
    //                         size="small"
    //                         color="warning"
    //                       />
    //                     ) : (
    //                       <Chip 
    //                         icon={<CheckCircleIcon />}
    //                         label="Ho√†n th√†nh"
    //                         size="small"
    //                         color="success"
    //                       />
    //                     )}
    //                   </TableCell>
    //                   <TableCell align="center">
    //                     <IconButton size="small" color="primary">
    //                       <VisibilityIcon />
    //                     </IconButton>
    //                     <IconButton size="small" color="secondary">
    //                       <EditIcon />
    //                     </IconButton>
    //                   </TableCell>
    //                 </TableRow>
    //               ))}
    //             </TableBody>
    //           </Table>
    //         </TableContainer>
    //       </Paper>
    //     </Grid>
    //   </Grid>

    //   {/* Quick Actions */}
    //   <Box sx={{ mt: 4, p: 3, bgcolor: '#f5f5f5', borderRadius: 2 }}>
    //     <Typography variant="h6" sx={{ mb: 2, fontWeight: 600 }}>
    //       ‚ö° Thao t√°c nhanh
    //     </Typography>
    //     <Grid container spacing={2}>
    //       <Grid item>
    //         <Button variant="contained" startIcon={<AddIcon />}>
    //           T·∫°o b√†i t·∫≠p m·ªõi
    //         </Button>
    //       </Grid>
    //       <Grid item>
    //         <Button variant="outlined" startIcon={<FolderIcon />}>
    //           T·∫£i l√™n t√†i li·ªáu
    //         </Button>
    //       </Grid>
    //       <Grid item>
    //         <Button variant="outlined" startIcon={<NotificationsIcon />}>
    //           G·ª≠i th√¥ng b√°o
    //         </Button>
    //       </Grid>
    //       <Grid item>
    //         <Button variant="outlined" startIcon={<ScheduleIcon />}>
    //           Th√™m l·ªãch d·∫°y
    //         </Button>
    //       </Grid>
    //     </Grid>
    //   </Box>
    // </Box>
    <Box></Box>
    );
};

export default LecturerDashboard;